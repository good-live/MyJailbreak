/*
 * MyJailbreak - Ratio - CT Ban Support.
 * by: shanapu
 * https://github.com/shanapu/MyJailbreak/
 *
 * This file is part of the MyJailbreak SourceMod Plugin.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, version 3.0, as published by the
 * Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <http://www.gnu.org/licenses/>.
 */


/******************************************************************************
                   STARTUP
******************************************************************************/


//Includes
#include <sourcemod>
#include <sdktools>
#include <cstrike>
#include <colors>
#include <autoexecconfig>
#include <mystock>
#include <myjailbreak>
#include <clientprefs>

Handle g_hCookieCTBan;

//Info
public Plugin myinfo = {
	name = "MyJailbreak - Ratio - CT Ban Support", 
	author = "shanapu, Addicted", 
	description = "Jailbreak team balance / ratio plugin", 
	version = MYJB_VERSION, 
	url = MYJB_URL_LINK
};


//Start
public void OnPluginStart()
{
	//Translation
	LoadTranslations("MyJailbreak.Ratio.phrases");
	LoadTranslations("MyJailbreak.Warden.phrases");

	HookEvent("player_spawn", Event_OnPlayerSpawn, EventHookMode_Post);
	
	//Cookies
	if ((g_sCookieCTBan = FindClientCookie("Banned_From_CT")) == INVALID_HANDLE)
		g_sCookieCTBan = RegClientCookie("Banned_From_CT", "Tells if you are restricted from joining the CT team", CookieAccess_Protected);
}

public Action MyJB_OnClientJoinGuardQueue(int clien)
{
	char szCookie[2];
	GetClientCookie(client, g_sCookieCTBan, szCookie, sizeof(szCookie));
	if (szCookie[0] == '1')
	{
		ClientCommand(client, "play %s", g_sRestrictedSound);
		CReplyToCommand(client, "%t %t", "ratio_tag" , "ratio_banned");
		FakeClientCommand(client, "sm_isbanned @me");
		return Plugin_Handled;
	}
	return Plugin_Continue;
}

public Action Event_OnPlayerSpawn(Event event, const char[] name, bool bDontBroadcast) 
{
	int client = GetClientOfUserId(event.GetInt("userid"));
	
	if (GetClientTeam(client) != 3) 
		return Plugin_Continue;
		
	if (!IsValidClient(client, true, false))
		return Plugin_Continue;
		
	char sData[2];
	GetClientCookie(client, g_sCookieCTBan, sData, sizeof(sData));
	
	if (sData[0] == '1')
	{
		CPrintToChat(client, "%t %t", "ratio_tag" , "ratio_banned");
		PrintCenterText(client, "%t", "ratio_banned");
		CreateTimer(5.0, Timer_SlayPlayer, GetClientUserId(client), TIMER_FLAG_NO_MAPCHANGE);
		return Plugin_Continue;
	}
	
	return Plugin_Continue;
}

public Action Timer_SlayPlayer(Handle hTimer, any iUserId) 
{
	int client = GetClientOfUserId(iUserId);
	
	if ((IsValidClient(client, false, false)) && (GetClientTeam(client) == CS_TEAM_CT))
	{
		ForcePlayerSuicide(client);
		ChangeClientTeam(client, CS_TEAM_T);
		CS_RespawnPlayer(client);
		// MinusDeath(client);
	}
	return Plugin_Stop;
}
